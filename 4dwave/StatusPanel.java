import java.awt.*;class StatusPanel extends Panel{	//***** Variable-value labels	TextField			filename_text_field = null;	TextField			cur_tp_text_field = null;	TextField			current_plane_text_field = null;	TextField			time_remaining_text_field = null;	TextField			time_elapsed_text_field = null;	TextField			total_images_text_field = null;	TextField			current_image_text_field = null;		//***** Static-value labels	Label				processing_filename_label = null;	Label				of_label = null;	Label				cur_tp_label = null;	Label				current_plane_label = null;	Label				time_remaining_label = null;	Label				time_elapsed_label = null;	Label				processing_label = null;	AbortPanel		 	abort_panel = null;	GridBagLayout		gbl = null;	GridBagConstraints	constraints = null;	Insets				insets = null;		//*****************************************************************	//*		I N I T	//*		Created 9/18/02 for v1.34	//*		Last modified 9/26/02 for v1.35	//*****************************************************************	public StatusPanel()	{		super();				gbl = new GridBagLayout();		constraints = new GridBagConstraints();		setLayout(gbl);		insets = new Insets(0,0,0,0);			setFont(new Font("Dialog", Font.PLAIN, 11));		try		{			processing_label = new Label("Processing Image #:");			processing_label.setSize(119,15);			constraints.gridx = 0;			constraints.gridy = 0;			constraints.gridwidth = 1;			constraints.gridheight = 1;			constraints.anchor = GridBagConstraints.NORTHWEST;			constraints.fill = GridBagConstraints.NONE;			constraints.weightx = 0;			constraints.weighty = 0;			insets.top = 20;			insets.bottom = 5;			insets.left = 10;			insets.right = 5;			constraints.insets = insets;			add(processing_label);			gbl.setConstraints(processing_label, constraints);			current_image_text_field = new TextField();			current_image_text_field.setColumns(8);						current_image_text_field.setSize(60,20);			constraints.gridx = 1;			constraints.gridy = 0;			constraints.gridwidth = 1;			constraints.gridheight = 1;			constraints.anchor = GridBagConstraints.NORTHWEST;			constraints.fill = GridBagConstraints.NONE;			constraints.weightx = 0;			constraints.weighty = 0;			insets.top = 20;			insets.bottom = 5;			insets.left = 10;			insets.right = 5;			constraints.insets = insets;			add(current_image_text_field);			gbl.setConstraints(current_image_text_field, constraints);					of_label = new Label("of");			of_label.setSize(21,15);			constraints.gridx = 2;			constraints.gridy = 0;			constraints.gridwidth = 1;			constraints.gridheight = 1;			constraints.anchor = GridBagConstraints.NORTHWEST;			constraints.fill = GridBagConstraints.NONE;			constraints.weightx = 0;			constraints.weighty = 0;			insets.top = 20;			insets.bottom = 5;			insets.left = 10;			insets.right = 5;			constraints.insets = insets;			add(of_label);			gbl.setConstraints(of_label, constraints);			total_images_text_field = new TextField();			total_images_text_field.setColumns(8);						total_images_text_field.setSize(60,20);			constraints.gridx = 3;			constraints.gridy = 0;			constraints.gridwidth = 1;			constraints.gridheight = 1;			constraints.anchor = GridBagConstraints.NORTHWEST;			constraints.fill = GridBagConstraints.NONE;			constraints.weightx = 0;			constraints.weighty = 0;			insets.top = 20;			insets.bottom = 5;			insets.left = 5;			insets.right = 10;			constraints.insets = insets;			add(total_images_text_field);			gbl.setConstraints(total_images_text_field, constraints);			time_elapsed_label = new Label("Time Elapsed:");			time_elapsed_label.setSize(83,15);			add(time_elapsed_label);			setGridBagConstraints(time_elapsed_label, 0, 1, 1, 1);			time_elapsed_text_field = new TextField("00:00:00");			time_elapsed_text_field.setSize(60,20);			add(time_elapsed_text_field);			setGridBagConstraints(time_elapsed_text_field, 1, 1, 1, 1);					time_remaining_label = new Label("Time Remaining:");			time_remaining_label.setSize(99,15);			add(time_remaining_label);			setGridBagConstraints(time_remaining_label, 0, 2, 1, 1);			time_remaining_text_field = new TextField("00:00:00");			time_remaining_text_field.setSize(60,20);			add(time_remaining_text_field);			setGridBagConstraints(time_remaining_text_field, 1, 2, 1, 1);					current_plane_label = new Label("Current plane #:");			current_plane_label.setSize(131,15);			add(current_plane_label);			setGridBagConstraints(current_plane_label, 0, 3, 1, 1);			current_plane_text_field = new TextField();			current_plane_text_field.setSize(60,20);			current_plane_text_field.setColumns(8);						add(current_plane_text_field);			setGridBagConstraints(current_plane_text_field, 1, 3, 1, 1);			cur_tp_label = new Label("Current Timepoint #:");			cur_tp_label.setSize(122,15);			add(cur_tp_label);			setGridBagConstraints(cur_tp_label, 0, 4, 1, 1);			cur_tp_text_field = new TextField();			cur_tp_text_field.setSize(60,20);			cur_tp_text_field.setColumns(8);						add(cur_tp_text_field);			setGridBagConstraints(cur_tp_text_field, 1, 4, 1, 1);					processing_filename_label = new Label("Processing Filename:");			processing_filename_label.setSize(127,15);			add(processing_filename_label);			setGridBagConstraints(processing_filename_label, 0, 5, 1, 1);			filename_text_field = new TextField();			filename_text_field.setSize(150,20);			filename_text_field.setColumns(22);						constraints.gridx = 1;			constraints.gridy = 5;			constraints.gridwidth = 3;			constraints.gridheight = 1;			constraints.anchor = GridBagConstraints.NORTHWEST;			constraints.fill = GridBagConstraints.HORIZONTAL;			constraints.weightx = 0;			constraints.weighty = 0;			insets.top = 0;			insets.bottom = 5;			insets.left = 10;			insets.right = 10;			constraints.insets = insets;			add(filename_text_field);			gbl.setConstraints(filename_text_field, constraints);			abort_panel = new AbortPanel();			abort_panel.setSize(300, 40);			constraints.gridx = 0;			constraints.gridy = 6;			constraints.gridwidth = 4;			constraints.gridheight = 1;			constraints.anchor = GridBagConstraints.NORTHWEST;			constraints.fill = GridBagConstraints.HORIZONTAL;			constraints.weightx = 1;			constraints.weighty = 1;			insets.top = 10;			insets.bottom = 0;			insets.left = 0;			insets.right = 0;			constraints.insets = insets;			add(abort_panel);			gbl.setConstraints(abort_panel, constraints);		}		catch (Exception e)		{			Settings.image_window.displayMessage("Exception setting up StatusPanel!");		}		return;		}// end of init	//*****************************************************************	//*		S E T  G R I D B A G  C O N S T R A I N T S	//*		Created 9/18/02 for v1.34	//*****************************************************************	private void setGridBagConstraints(Component comp, int grid_x, int grid_y, int gridwidth, int gridheight) throws Exception	{		constraints.gridx = grid_x;		constraints.gridy = grid_y;		constraints.gridwidth = gridwidth;		constraints.gridheight = gridheight;		constraints.anchor = GridBagConstraints.WEST;		constraints.fill = GridBagConstraints.NONE;		constraints.weightx = 0;		constraints.weighty = 0;		insets.top = 0;		insets.bottom = 5;		insets.left = 10;		insets.right = 5;		constraints.insets = insets;		gbl.setConstraints(comp, constraints);			return;	}// end of setGridBagConstraints()		//*****************************************************************	//*		H A N D L E  T O T A L  I M A G E S	//*****************************************************************	public void	handleTotalImages(int total_images) throws Exception	{		total_images_text_field.setText(" " + Integer.toString(total_images));		return;			}// end of handleTotalImages()	//*****************************************************************	//*		H A N D L E  C U R  I M A G E	//*****************************************************************	public void	handleCurImage(int image_num) throws Exception	{		current_image_text_field.setText(" " + Integer.toString(image_num));		return;			}// end of handleCurImage()		//*****************************************************************	//*		H A N D L E  C U R  T I M E P O I N T	//*****************************************************************	public void	handleCurTimepoint(int tp) throws Exception	{		cur_tp_text_field.setText(" " + Integer.toString(tp));		return;			}// end of handleCurTimepoint()	//*****************************************************************	//*		H A N D L E  C U R  F O C A L P L A N E	//*****************************************************************	public void	handleCurFocalplane(int plane) throws Exception	{		current_plane_text_field.setText(" " + Integer.toString(plane));		return;			}// end of handleCurFocalplane()			//*****************************************************************	//*		H A N D L E  E L A P S E D  T I M E	//*****************************************************************	public void	handleElapsedTime() throws Exception	{		long			delta_ms = 0, total_secs = 0;		int				hours = 0, mins = 0, secs = 0;		int				total_mins = 0;		String			time_string = null;				//***** Determine elapsed time		delta_ms = System.currentTimeMillis() - Settings.start_time;		total_secs = delta_ms/1000;		total_mins = (int)(total_secs/60);		secs = (int)(total_secs % 60);		hours = (int)(total_mins/60);		mins = (int)(total_mins % 60);				//***** Build the time elapsed string		time_string = StringUtils.getTimeString(hours, mins, secs);		time_elapsed_text_field.setText(" " + time_string);					return;			}// end of handleElapsedTime()	//*****************************************************************	//*		H A N D L E  T I M E  R E M A I N I N G	//*****************************************************************	public void	handleTimeRemaining(String time_string) throws Exception	{		time_remaining_text_field.setText(" " + time_string);		return;			}// end of handleTimeRemaining()			//*****************************************************************	//*		H A N D L E  F I L E N A M E	//*****************************************************************	public void	handleFilename(String filename) throws Exception	{		filename_text_field.setText(" " + filename);		return;			}// end of handleFilename()	//*****************************************************************	//*		P A I N T	//*		Last modified 9/18/02 for v1.34	//*****************************************************************	public void paint(Graphics g)	{				super.paint(g);										Rectangle bounds = this.getBounds();				g.setPaintMode();		g.drawRect(0, 0, bounds.width - 1, bounds.height - 1);						 		//drawBoundingBoxes(g);				 					return;			}// end of paint()	/*	//*****************************************************************	//*		D R A W  B O U N D I N G  B O X E S	//*****************************************************************	private void  drawBoundingBoxes(Graphics g)	{		Rectangle	r = null;				if (g == null)			return;			r = filename_text_field.getBounds();		g.drawRect(r.x-1, r.y-1, r.width+1, r.height+1);		r = cur_tp_text_field.getBounds();		g.drawRect(r.x-1, r.y-1, r.width+1, r.height+1);		r = current_image_text_field.getBounds();		g.drawRect(r.x-1, r.y-1, r.width+1, r.height+1);		r = time_remaining_text_field.getBounds();		g.drawRect(r.x-1, r.y-1, r.width+1, r.height+1);		r = time_elapsed_text_field.getBounds();		g.drawRect(r.x-1, r.y-1, r.width+1, r.height+1);		r = total_images_text_field.getBounds();		g.drawRect(r.x-1, r.y-1, r.width+1, r.height+1);		r = current_plane_text_field.getBounds();		g.drawRect(r.x-1, r.y-1, r.width+1, r.height+1);				return;	}// end of drawBoundingBoxes*/		}// end of class StatusPanel