import java.awt.*;import java.awt.event.*;public class QuitDialog extends Dialog{	Button 				yes_button = null;	Button 				no_button = null;	Label 				label_one = null;	BooleanWrapper		confirmed = null;	GridBagLayout		gbl = null;	GridBagConstraints	constraints = null;	Insets				insets = null;		//***************************************************************************	//*		I N I T	//*		Last modified 12/30/02	//***************************************************************************	public QuitDialog(BooleanWrapper confirm, Frame parent, boolean modal)	{		super(parent, modal);				confirmed = confirm;				gbl = new GridBagLayout();		constraints = new GridBagConstraints();		insets = new Insets(0,0,0,0);		setLayout(gbl);		setVisible(false);		setSize(237,114);		setResizable(false);		setFont(new Font("Dialog", Font.BOLD, 12));		setForeground(new Color(0));		setBackground(new Color(16777215));		label_one = new java.awt.Label("Confirm quit?",Label.CENTER);		//label_one.setLocation(25,22);		//label_one.setSize(180,23);		constraints.gridx = 0;		constraints.gridy = 0;		constraints.gridwidth = 2;		constraints.anchor = GridBagConstraints.CENTER;		constraints.fill = GridBagConstraints.HORIZONTAL;		constraints.weightx = 1;		constraints.weighty = 1;		insets.top = 20;		insets.bottom = 0;		insets.left = 20;		insets.right = 20;		constraints.insets = insets;		add(label_one);		setTitle("QuitDialog");		gbl.setConstraints(label_one, constraints);		yes_button = new java.awt.Button();		yes_button.setLabel(" Yes ");		//yes_button.setLocation(32,68);		//yes_button.setSize(85,30);		constraints.gridx = 0;		constraints.gridy = 1;		constraints.gridwidth = 1;		constraints.anchor = GridBagConstraints.CENTER;		constraints.fill = GridBagConstraints.NONE;		constraints.weightx = 1;		constraints.weighty = 1;		insets.top = 20;		insets.bottom = 20;		insets.left = 20;		insets.right = 20;		constraints.insets = insets;		add(yes_button);		gbl.setConstraints(yes_button, constraints);		no_button = new java.awt.Button();		no_button.setLabel("  No  ");		//no_button.setLocation(120,69);		//no_button.setSize(85,30);		constraints.gridx = 1;		constraints.gridy = 1;		constraints.gridwidth = 1;		constraints.anchor = GridBagConstraints.CENTER;		constraints.weightx = 1;		constraints.weighty = 1;		insets.top = 20;		insets.bottom = 20;		insets.left = 20;		insets.right = 20;		constraints.insets = insets;		add(no_button);		gbl.setConstraints(no_button, constraints);		MyActionListener action_listener = new MyActionListener();		no_button.addActionListener(action_listener);		yes_button.addActionListener(action_listener);				pack();	}	public void addNotify()	{	    // Record the size of the window prior to calling parents addNotify.	    Dimension d = getSize();	    		super.addNotify();		if (fComponentsAdjusted)			return;		// Adjust components according to the getInsets		setSize(getInsets().left + getInsets().right + d.width, getInsets().top + getInsets().bottom + d.height);		Component components[] = getComponents();		for (int i = 0; i < components.length; i++)		{			Point p = components[i].getLocation();			p.translate(getInsets().left, getInsets().top);			components[i].setLocation(p);		}		fComponentsAdjusted = true;	}    /**     * Shows or hides the component depending on the boolean flag b.     * @param b  if true, show the component; otherwise, hide the component.     * @see java.awt.Component#isVisible     */    public void setVisible(boolean b)	{		if(b)		{			Rectangle bounds = getParent().getBounds();			Rectangle abounds = getBounds();				setLocation(bounds.x + (bounds.width - abounds.width)/ 2,				 bounds.y + (bounds.height - abounds.height)/2);		}		super.setVisible(b);	}    // Used for addNotify check.	boolean fComponentsAdjusted = false;	class MyActionListener implements ActionListener	{		public void actionPerformed(ActionEvent event)		{			Object object = event.getSource();			if (object == no_button)				noButtonClicked(event);			else if (object == yes_button)				yesButtonClicked(event);		}	}	void yesButtonClicked(ActionEvent event)	{		confirmed.setValue(true);		setVisible(false);		dispose();	}	void noButtonClicked(ActionEvent event)	{		confirmed.setValue(false);		setVisible(false);		dispose();	}}